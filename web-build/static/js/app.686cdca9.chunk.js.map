{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/CustomListItem.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","source","uri","width","height","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","onPress","title","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop","RegisterScreen","name","setName","imageUrl","setImageUrl","useLayoutEffect","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","h3","marginBottom","raised","CustomListItem","id","chatName","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","bottomDivider","rounded","Content","Title","numberOfLines","ellipsizeMode","fontWeight","Subtitle","HomeScreen","chats","setChats","signOut","headerStyle","headerTitleStyle","color","headerTintColor","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","AntDesign","size","SimpleLineIcons","SafeAreaView","ScrollView","AddChatScreen","input","setInput","createChat","a","async","add","goBack","leftIcon","disabled","ChatScreen","route","messages","setMessages","headerBackTitleVisible","headerTitleAlign","headerTitle","Text","params","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","unsubscribe","behaviour","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","paddingTop","sender","position","bottom","right","senderText","reciever","left","recieverText","recieverName","footer","TextInput","textInput","Ionicons","borderRadius","alignSelf","margin","maxHeight","maxWidth","paddingRight","fontSize","Stack","createStackNavigator","globalScreenOptions","cardStyle","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.686cdca9.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDVS5MFU3_YbS2aLBcyez59CUgXD6tAxG8\",\n  authDomain: \"signal-clone-ec433.firebaseapp.com\",\n  projectId: \"signal-clone-ec433\",\n  storageBucket: \"signal-clone-ec433.appspot.com\",\n  messagingSenderId: \"1059987507244\",\n  appId: \"1:1059987507244:web:35d8081dc5dcd0d6dc2989\",\n};\n\nlet app;\n\nif (firebase.apps.length === 0) {\n  app = firebase.initializeApp(firebaseConfig);\n} else {\n  app = firebase.app();\n}\n\nconst db = app.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import React, { useEffect, useState } from \"react\";\nimport { KeyboardAvoidingView, StyleSheet, Text, View } from \"react-native\";\nimport { Button, Input, Image } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"../firebase\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        navigation.replace(\"Home\");\n      }\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const signIn = () => {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error));\n  };\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n      <StatusBar style=\"light\" />\n      <Image\n        source={{\n          uri: \"https://blog.mozilla.org/internetcitizen/files/2018/08/signal-logo.png\",\n        }}\n        style={{ width: 200, height: 200 }}\n      />\n      <View style={styles.inputContainer}>\n        <Input\n          placeholder=\"Email\"\n          autoFocus\n          type=\"email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <Input\n          placeholder=\"Password\"\n          secureTextEntry\n          type=\"password\"\n          value={password}\n          onChangeText={(password) => setPassword(password)}\n          onSubmitEditing={signIn}\n        />\n      </View>\n\n      <Button containerStyle={styles.button} onPress={signIn} title=\"Login\" />\n      <Button\n        containerStyle={styles.button}\n        onPress={() => navigation.navigate(\"Register\")}\n        type=\"outline\"\n        title=\"Register\"\n      />\n      <View style={{ height: 100 }} />\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\",\n  },\n  inputContainer: {\n    width: 300,\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n  },\n});\n","import { KeyboardAvoidingView, StyleSheet, View } from \"react-native\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Button, Input, Text } from \"react-native-elements\";\nimport { auth } from \"../firebase\";\n\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  useLayoutEffect(() => {\n    navigation.setOptions({ headerBackTitle: \"Login\" });\n  }, [navigation]);\n\n  const register = () => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        authUser.user.updateProfile({\n          displayName: name,\n          photoURL:\n            imageUrl ||\n            \"https://censur.es/wp-content/uploads/2019/03/default-avatar.png\",\n        });\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n      <StatusBar style=\"light\" />\n      <Text h3 style={{ marginBottom: 50 }}>\n        Create a Signal account\n      </Text>\n\n      <View style={styles.inputContainer}>\n        <Input\n          placeholder=\"Full Name\"\n          autoFocus\n          type=\"text\"\n          value={name}\n          onChangeText={(text) => setName(text)}\n        />\n        <Input\n          placeholder=\"Email\"\n          type=\"email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <Input\n          placeholder=\"Password\"\n          type=\"text\"\n          secureTextEntry\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n        <Input\n          placeholder=\"Avatar URL\"\n          type=\"text\"\n          value={imageUrl}\n          onChangeText={(text) => setImageUrl(text)}\n          onSubmitEditing={register}\n        />\n      </View>\n      <Button\n        containerStyle={styles.button}\n        raised\n        title=\"Register\"\n        onPress={register}\n      />\n      <View style={{ height: 100 }} />\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\",\n  },\n  button: { width: 200, marginTop: 10 },\n  inputContainer: { width: 300 },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Avatar, ListItem } from \"react-native-elements\";\nimport { db } from \"../firebase\";\n\nconst CustomListItem = ({ id, chatName, enterChat }) => {\n  const [chatMessages, setChatMessages] = useState([]);\n  useEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .doc(id)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setChatMessages(snapshot.docs.map((doc) => doc.data()))\n      );\n\n    return unsubscribe;\n  });\n\n  return (\n    <ListItem onPress={() => enterChat(id, chatName)} key={id} bottomDivider>\n      <Avatar\n        rounded\n        source={{\n          uri:\n            chatMessages[0]?.photoURL ||\n            \"https://censur.es/wp-content/uploads/2019/03/default-avatar.png\",\n        }}\n      />\n      <ListItem.Content>\n        <ListItem.Title\n          numberOfLines={1}\n          ellipsizeMode=\"tail\"\n          style={{ fontWeight: \"800\" }}\n        >\n          {chatName}\n        </ListItem.Title>\n        <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\n          {chatMessages[0]\n            ? `${chatMessages[0]?.displayName} : ${chatMessages[0]?.message}`\n            : \"No messages have been sent in this channel.\"}\n        </ListItem.Subtitle>\n      </ListItem.Content>\n    </ListItem>\n  );\n};\n\nexport default CustomListItem;\n\nconst styles = StyleSheet.create({});\n","import {\n  SafeAreaView,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport CustomListItem from \"../components/CustomListItem\";\nimport { Avatar } from \"react-native-elements\";\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\nimport { auth, db } from \"../firebase\";\n\nconst HomeScreen = ({ navigation }) => {\n  const [chats, setChats] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .onSnapshot((snapshot) =>\n        setChats(snapshot.docs.map((doc) => ({ id: doc.id, data: doc.data() })))\n      );\n\n    return () => {\n      unsubscribe;\n    };\n  }, []);\n\n  const signOut = () => {\n    auth.signOut().then(() => {\n      navigation.replace(\"Login\");\n    });\n  };\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Signal\",\n      headerStyle: { backgroundColor: \"#fff\" },\n      headerTitleStyle: { color: \"black\" },\n      headerTintColor: \"black\",\n      headerLeft: () => (\n        <View style={{ marginLeft: 20 }}>\n          <TouchableOpacity activeOpacity={0.5} onPress={signOut}>\n            <Avatar rounded source={{ uri: auth?.currentUser?.photoURL }} />\n          </TouchableOpacity>\n        </View>\n      ),\n      headerRight: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20,\n          }}\n        >\n          <TouchableOpacity activeOpacity={0.5}>\n            <AntDesign name=\"camerao\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"AddChat\")}\n            activeOpacity={0.5}\n          >\n            <SimpleLineIcons name=\"pencil\" size={24} color=\"black\" />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation]);\n\n  const enterChat = (id, chatName) => {\n    navigation.navigate(\"Chat\", { id, chatName });\n  };\n\n  return (\n    <SafeAreaView>\n      <ScrollView style={styles.container}>\n        {chats.map(({ id, data }) => (\n          <CustomListItem\n            key={id}\n            id={id}\n            chatName={data.chatName}\n            enterChat={enterChat}\n          />\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { Button, Input } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { db } from \"../firebase\";\n\nconst AddChatScreen = ({ navigation }) => {\n  const [input, setInput] = useState(\"\");\n  useLayoutEffect(() => {\n    navigation.setOptions({ title: \"Add New Chat\", headerBackTitle: \"Chats\" });\n  }, [navigation]);\n\n  const createChat = async () => {\n    if (input.length > 0) {\n      await db\n        .collection(\"chats\")\n        .add({ chatName: input })\n        .then(() => {\n          navigation.goBack();\n        })\n        .catch((error) => alert(error));\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Input\n        type=\"text\"\n        placeholder=\"Enter a chat name\"\n        value={input}\n        onChangeText={(text) => setInput(text)}\n        onSubmitEditing={createChat}\n        leftIcon={\n          <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\" />\n        }\n      />\n      <Button disabled={!input} onPress={createChat} title=\"Create new Chat\" />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    padding: 30,\n    height: \"100%\",\n  },\n});\n\nexport default AddChatScreen;\n","import {\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { Avatar } from \"react-native-elements\";\nimport { AntDesign, FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { TouchableWithoutFeedback } from \"react-native\";\nimport { auth, db } from \"../firebase\";\nimport firebase from \"firebase\";\n\nconst ChatScreen = ({ navigation, route }) => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Chat\",\n      headerBackTitleVisible: false,\n      headerTitleAlign: \"left\",\n      headerTitle: () => (\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Avatar\n            rounded\n            source={{\n              uri:\n                messages[0]?.data?.photoURL ||\n                \"https://censur.es/wp-content/uploads/2019/03/default-avatar.png\",\n            }}\n          />\n          <Text style={{ color: \"white\", marginLeft: 10, fontWeight: \"700\" }}>\n            {route.params.chatName}\n          </Text>\n        </View>\n      ),\n      headerLeft: () => (\n        <TouchableOpacity\n          style={{ marginLeft: 10 }}\n          onPress={navigation.goBack}\n        >\n          <AntDesign name=\"arrowleft\" size={24} color=\"white\" />\n        </TouchableOpacity>\n      ),\n      headerRight: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20,\n          }}\n        >\n          <TouchableOpacity\n            onPress={() => alert(\"Functionality not implemented yet\")}\n          >\n            <FontAwesome name=\"video-camera\" size={24} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => alert(\"Functionality not implemented yet\")}\n          >\n            <FontAwesome name=\"phone\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation, messages]);\n\n  const sendMessage = () => {\n    Keyboard.dismiss();\n\n    db.collection(\"chats\").doc(route.params.id).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      displayName: auth.currentUser.displayName,\n      email: auth.currentUser.email,\n      photoURL: auth.currentUser.photoURL,\n    });\n\n    setInput(\"\");\n  };\n\n  useLayoutEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .doc(route.params.id)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setMessages(\n          snapshot.docs.map((doc) => ({ id: doc.id, data: doc.data() }))\n        )\n      );\n\n    return () => {\n      return unsubscribe;\n    };\n  }, [route]);\n\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: \"white\" }}>\n      <StatusBar style=\"light\" />\n      <KeyboardAvoidingView\n        behaviour={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n        keyboardVerticalOffset={90}\n      >\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          <>\n            <ScrollView contentContainerStyle={{ paddingTop: 15 }}>\n              {messages.map(({ id, data }) =>\n                data.email === auth.currentUser.email ? (\n                  <View key={id} style={styles.sender}>\n                    <Avatar\n                      rounded\n                      //   For web:\n                      containerStyle={{\n                        position: \"absolute\",\n                        bottom: -15,\n                        right: -5,\n                      }}\n                      size={30}\n                      position=\"absolute\"\n                      bottom={-15}\n                      right={-5}\n                      source={{ uri: data.photoURL }}\n                    />\n                    <Text style={styles.senderText}>{data.message}</Text>\n                  </View>\n                ) : (\n                  <View key={id} style={styles.reciever}>\n                    <Avatar\n                      rounded\n                      //   For web:\n                      containerStyle={{\n                        position: \"absolute\",\n                        bottom: -15,\n                        left: -5,\n                      }}\n                      size={30}\n                      position=\"absolute\"\n                      bottom={-15}\n                      left={-5}\n                      source={{ uri: data.photoURL }}\n                    />\n                    <Text style={styles.recieverText}>{data.message}</Text>\n                    <Text style={styles.recieverName}>{data.displayName}</Text>\n                  </View>\n                )\n              )}\n            </ScrollView>\n            <View style={styles.footer}>\n              <TextInput\n                placeholder=\"Signal Message\"\n                style={styles.textInput}\n                value={input}\n                onChangeText={(text) => setInput(text)}\n                onSubmitEditing={sendMessage}\n              />\n              <TouchableOpacity activeOpacity={0.5} onPress={sendMessage}>\n                <Ionicons name=\"send\" size={24} color=\"#2B68E6\" />\n              </TouchableOpacity>\n            </View>\n          </>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nexport default ChatScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15,\n  },\n  textInput: {\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"grey\",\n    borderRadius: 30,\n  },\n  sender: {\n    padding: 15,\n    backgroundColor: \"#2B68E6\",\n    alignSelf: \"flex-end\",\n    borderRadius: 20,\n    margin: 15,\n    maxHeight: \"80%\",\n    position: \"relative\",\n  },\n  senderText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15,\n  },\n  reciever: {\n    padding: 15,\n    backgroundColor: \"#ECECEC\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    marginLeft: 15,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  recieverText: {\n    color: \"black\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n  },\n  recieverName: { left: 10, paddingRight: 10, fontSize: 10, color: \"black\" },\n});\n","import \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Platform, StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddChatScreen from \"./screens/AddChatScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\n\nconst Stack = createStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#2C6BED\" },\n  headerTitleStyle: { color: \"white\" },\n  headerTintColor: \"white\",\n  cardStyle: { flex: 1 },\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        // initialRouteName=\"Home\"\n        screenOptions={globalScreenOptions}\n      >\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Register\" component={RegisterScreen} />\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"AddChat\" component={AddChatScreen} />\n        <Stack.Screen name=\"Chat\" component={ChatScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"sourceRoot":""}